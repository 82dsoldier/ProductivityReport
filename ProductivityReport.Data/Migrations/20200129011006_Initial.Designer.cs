// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductivityReport.Data;

namespace ProductivityReport.Data.Migrations
{
    [DbContext(typeof(ProductivityReportContext))]
    [Migration("20200129011006_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProductivityReport.Data.Conversation", b =>
                {
                    b.Property<int>("ConversationID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("OperatorID");

                    b.Property<string>("PageName")
                        .HasMaxLength(100);

                    b.Property<string>("PageURL")
                        .HasMaxLength(100);

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("VisitorID");

                    b.Property<string>("Website")
                        .HasMaxLength(100);

                    b.HasKey("ConversationID")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("OperatorID");

                    b.HasIndex("VisitorID");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("ProductivityReport.Data.Message", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ConversationID");

                    b.Property<DateTime>("MessageDate");

                    b.Property<string>("MessageFrom")
                        .HasMaxLength(10);

                    b.Property<string>("MessageText");

                    b.Property<int>("MessageUserID");

                    b.HasKey("MessageID")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("ConversationID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ProductivityReport.Data.Operator", b =>
                {
                    b.Property<int>("OperatorID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .HasMaxLength(1000);

                    b.Property<string>("Phone")
                        .HasMaxLength(1000);

                    b.HasKey("OperatorID")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("Operators");
                });

            modelBuilder.Entity("ProductivityReport.Data.Visitor", b =>
                {
                    b.Property<int>("VisitorID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Browser")
                        .HasMaxLength(900);

                    b.Property<string>("Device")
                        .HasMaxLength(980);

                    b.Property<string>("Email")
                        .HasMaxLength(1000);

                    b.Property<string>("IPAddress")
                        .HasMaxLength(890);

                    b.Property<string>("Name")
                        .HasMaxLength(1000);

                    b.Property<string>("Phone")
                        .HasMaxLength(500);

                    b.HasKey("VisitorID")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("Visitors");
                });

            modelBuilder.Entity("ProductivityReport.Data.Conversation", b =>
                {
                    b.HasOne("ProductivityReport.Data.Operator", "Operator")
                        .WithMany("Conversations")
                        .HasForeignKey("OperatorID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ProductivityReport.Data.Visitor", "Visitor")
                        .WithMany("Conversations")
                        .HasForeignKey("VisitorID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ProductivityReport.Data.Message", b =>
                {
                    b.HasOne("ProductivityReport.Data.Conversation", "Conversation")
                        .WithMany("Messages")
                        .HasForeignKey("ConversationID")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
